# Terraform Provider testing workflow.
name: run tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    branches:
      - "main"
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
  # TODO: Rename 'generate' step to a more descriptive one.
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      # Temporarily download Terraform 1.8 prerelease for function documentation support.
      # When Terraform 1.8.0 final is released, this can be removed.
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.8.1'
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions]
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.3.*'
          - '1.4.*'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          ADYEN_API_KEY: ${{ secrets.ADYEN_API_KEY }}
          ADYEN_API_ENVIRONMENT: ${{ secrets.ADYEN_API_ENVIRONMENT }}
          ADYEN_API_MERCHANT_ACCOUNT: ${{ secrets.ADYEN_API_MERCHANT_ACCOUNT }}
          ADYEN_API_COMPANY_ACCOUNT: ${{ secrets.ADYEN_API_COMPANY_ACCOUNT }}
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
